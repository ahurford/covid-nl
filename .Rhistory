T<-7
DT = function(){
mod = nls(val ~ a*exp(r*seq(1,T)),
start = list(a = 100, r = 0.2))
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(round(log(2)/lambda,2), NA, NA)
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT,p))
}
HT = function(){
mod = nls(val ~ a*exp(-r*seq(1,T)),
start = list(a = 300, r = 0.2))
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(-round(log(.5)/lambda,2), NA, NA)
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT,p))
}
val <- tail(EH.corr,T)
DT.eastern = DT()
print(DT.eastern)
val <- tail(CH.corr,T)
DT.central = DT()
val <- tail(WH.corr,T)
DT.western = DT()
val <- tail(LG.corr,T)
DT.labrador = DT()
val <- tail(NL.corr,T)
DT.NL = HT()
g1=ggplot(data3.corr, aes(x=date, y=cases, group = RHA)) +
geom_line(aes(color=RHA))+
geom_point(aes(color=RHA))+
xlab("")+
ylab("")+
ggtitle("Adjusted cases per 100,000 people in each NL Regional Health Authority")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=NL, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$EH+data$WH+data$CH+data$LG))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Newfoundland and Labrador")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g.EH=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=EH, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$EH))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Eastern Health")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "2 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g.CH=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=CH, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$CH))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Central Health")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "2 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g.WH=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=WH, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$WH))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Western Health")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "2 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g.LG=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=LG, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$LG))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Labrador-Grenfell Health")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "2 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g
g.EH+g.CH
g.WH+g.LG
g1
# Assume 3 days hospitalized. Admissions - discharges
# Hospitalized within 14 days of specimen, take 7 as mean.
d = 3
UKh = (198348/815)
UKm = (198348/57)
ONh = (29594/75)
ONm = (29594/3)
NLh = 1.2*ONh
NLm = .1*ONm
UK.rate = NL.corr/UKh
UK.rate = cumsum(UK.rate)
UK.rate[7:L] = UK.rate[7:L] - UK.rate[1:(L-6)]
ON.rate = NL.corr/ONh
ON.rate = cumsum(ON.rate)
ON.rate[7:L] = ON.rate[7:L] - ON.rate[1:(L-6)]
NL.rate = NL.corr/NLh
NL.rate = cumsum(NL.rate)
NL.rate[7:L] = NL.rate[7:L] - NL.rate[1:(L-6)]
UK.rate.ad = cumsum(NL.corr)/UKh
ON.rate.ad = cumsum(NL.corr)/ONh
NL.rate.ad = cumsum(NL.corr)/NLh
# 649834/57 - 5 days median time to death.
UK.rate.m = cumsum(NL.corr)/UKm
ON.rate.m = cumsum(NL.corr)/ONm
NL.rate.m = cumsum(NL.corr)/NLm
future.dates = tail(seq(from=as.Date(data$date[L], format = "%Y-%m-%d"), length.out = 8, by = "days"),-1)
days2 = c(tail(as.Date(data$date, format = "%Y-%m-%d"),-7),future.dates)
future.dates.5 = tail(seq(from=as.Date(data$date[L], format = "%Y-%m-%d"), length.out = 6, by = "days"),-1)
days3 = c(tail(as.Date(data$date, format = "%Y-%m-%d"),-5),future.dates.5)
NL.hosp = c(tail(NL.data$cum.hospital,-7), rep(NA,7))
NL.mort = c(tail(NL.data$cum.mort,-5), rep(NA,5))
data2 = data.frame(dates = rep(days2,3), occupancy = c(ON.rate,UK.rate,NL.rate), location = rep(c("ON", "UK", "NL"), each = L))
data3 = data.frame(dates = rep(days3,3), mortality = c(ON.rate.m, UK.rate.m,NL.rate.m), location = rep(c("ON", "UK", "NL"), each = length(days3)))
data4 = data.frame(dates = rep(days2,3), admission = c(UK.rate.ad, ON.rate.ad, NL.rate.ad),location = rep(c("ON", "UK", "NL"), each = L))
pointdata = data.frame(days2 = days2, hospital = NL.hosp)
pointdata2 = data.frame(days2 = days3, mortality = NL.mort)
g2=ggplot()+
geom_line(data=data2, aes(x=as.Date(dates), y=occupancy, group = location, color=location))+
geom_point(data = pointdata, aes(x = days2, y = hospital))+
geom_line(data = pointdata, aes(x = days2, y = hospital))+
xlab("")+
ylab("")+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
ggtitle("Projected and actual hospital occupancy")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g2b=ggplot()+
geom_line(data=data4, aes(x=as.Date(dates), y=admission, group = location, color=location))+
xlab("")+
ylab("")+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
ggtitle("Projected cumulative hospitalizations since December 15, 2021")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g3=ggplot()+
geom_line(data=data3, aes(x=as.Date(dates), y=mortality, group = location, color=location))+
geom_point(data = pointdata2, aes(x = days2, y = mortality))+
geom_line(data = pointdata2, aes(x = days2, y = mortality))+
xlab("")+
ylab("")+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
ggtitle("Projected and actual cumulative deaths since December 15, 2021")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g2
g3
require(ggplot2)
require(patchwork)
data <- read.csv('https://raw.githubusercontent.com/ahurford/covid-nl/master/NL.csv', fill=TRUE)
test <- read.csv('https://raw.githubusercontent.com/ahurford/covid-nl/master/Test_NL(twosources).csv', fill=TRUE)
# Dec 28  4174
# Jan 1 4680
# Jan 2 3354
# Jan 8 4041
test1 = test$total.test
test1[2] = mean(c(test1[1],test1[3]))
test1[4] = mean(c(test1[3],test1[5]))
test1[11] = mean(c(test1[10],test1[14])-test1[10])*(1/4)+test1[10]
test1[12] = mean(c(test1[10],test1[14])-test1[10])*(2/4)+test1[10]
test1[13] = mean(c(test1[10],test1[14])-test1[10])*(3/4)+test1[10]
test1 = diff(test1)
data[1,2:7] = data[1,2:7]/2
# Need to add in December 16
new1 = data[2,]
L = length(data[,1])
new1[1,1] = "2021-12-16"
new1[1,2:7] = new1[2:7]/2
data = rbind(data[1,],new1,data[2:L,])
data[3,2:7] = data[2,2:7]
data[11,2:7] = data[11,2:7]/3
L = length(data[,1])
new1[1,1] = "2021-12-25"
new1[1,2:8] = data[11,2:8]
new2 = new1
new2[1,1] = "2021-12-26"
data = rbind(data[1:10,],new1, new2,data[11:L,])
L=length(data$total)
cases = data$total[2:L]
# Remove Christmas dates
test1 = test1[-(10:12)]
dd = tail(data$date,-1)
dd = dd[-(10:12)]
cases = cases[-(10:12)]
# Lag cases by 3 days:
lag = 3
test3 = tail(test1,-lag)
dd3 = head(dd,-lag)
cases3 = head(cases,-lag)
L = length(cases3)
# Break Jan 3
ind = which(dd3 == "2022-01-03")
ind2 = which(dd3 == "2022-01-07") # Excludes Jan 10 which was abnormally high day for tests.
# The above will need to be modified if testing to notification lag is different
cases1 = c(cases3[1:ind], rep(0,(L-ind)))
cases2 = c(rep(0,ind), cases3[(ind+1):L])
popn = rep((317664+91201+76608+36069),L)
popn = popn[-(ind2:L)]
test3 = test3[-(ind2:L)]
cases2 = cases2[-(ind2:L)]
cases1 = cases1[-(ind2:L)]
mod = lm(test3 ~ cases1 + cases2 + popn + 0)
a1 = round(unname(coef(mod)[1]),2)
a2 = round(unname(coef(mod)[2]),2)
b = round(unname(coef(mod)[3]),2)
NL.data = data
L = length(data[,1])
data2 = data.frame(date = rep(data$date,4), cases = c(data$EH, data$CH, data$WH, data$LG), RHA = rep(c("Eastern", "Central", "Western", "Labrador-Grenfell"), each=L))
data3 = data.frame(date = rep(data$date,5), cases = 100000*c(data$EH/317664, data$CH/91201, data$WH/76608, data$LG/36069, data$total/(317664+91201+76608+36069)), RHA = rep(c("Eastern", "Central", "Western", "Labrador-Grenfell", "Newfoundland & Labrador"), each=L))
# Corrected data
ind = min(which(data3$date=="2022-01-06"))
EH.corr = data$EH + (a1-a2)*c(rep(0,(ind-1)),data$EH[(ind-3):(L-3)])
i1=min(which(data3$date == "2021-12-29"))
EH.corr[i1:ind] = EH.corr[i1:ind]+EH.corr[i1:ind]/sum(EH.corr[i1:ind])*680
CH.corr = data$CH + (a1-a2)*c(rep(0,(ind-1)),data$CH[(ind-3):(L-3)])
WH.corr = data$WH + (a1-a2)*c(rep(0,(ind-1)),data$WH[(ind-3):(L-3)])
LG.corr = data$LG + (a1-a2)*c(rep(0,(ind-1)),data$LG[(ind-3):(L-3)])
NL.corr = EH.corr + CH.corr + WH.corr + LG.corr
data2.corr = data.frame(date = data$date, EH = EH.corr, NL = NL.corr, WH= WH.corr, LG = LG.corr, CH = CH.corr)
data3.corr = data.frame(date = rep(data$date,5), cases = 100000*c(EH.corr/317664, CH.corr/91201, WH.corr/76608, LG.corr/36069,(EH.corr+CH.corr+WH.corr+LG.corr)/(317664+91201+76608+36069)), RHA = rep(c("Eastern", "Central", "Western", "Labrador-Grenfell", "Newfoundland & Labrador"), each=L))
T<-7
DT = function(){
mod = nls(val ~ a*exp(r*seq(1,T)),
start = list(a = 100, r = 0.2))
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(round(log(2)/lambda,2), NA, NA)
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT,p))
}
HT = function(){
mod = nls(val ~ a*exp(-r*seq(1,T)),
start = list(a = 300, r = 0.2))
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(-round(log(.5)/lambda,2), NA, NA)
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT,p))
}
val <- tail(EH.corr,T)
DT.eastern = DT()
print(DT.eastern)
val <- tail(CH.corr,T)
DT.central = DT()
val <- tail(WH.corr,T)
DT.western = DT()
val <- tail(LG.corr,T)
DT.labrador = DT()
val <- tail(NL.corr,T)
DT.NL = HT()
require(ggplot2)
require(patchwork)
data <- read.csv('https://raw.githubusercontent.com/ahurford/covid-nl/master/NL.csv', fill=TRUE)
test <- read.csv('https://raw.githubusercontent.com/ahurford/covid-nl/master/Test_NL(twosources).csv', fill=TRUE)
# Dec 28  4174
# Jan 1 4680
# Jan 2 3354
# Jan 8 4041
test1 = test$total.test
test1[2] = mean(c(test1[1],test1[3]))
test1[4] = mean(c(test1[3],test1[5]))
test1[11] = mean(c(test1[10],test1[14])-test1[10])*(1/4)+test1[10]
test1[12] = mean(c(test1[10],test1[14])-test1[10])*(2/4)+test1[10]
test1[13] = mean(c(test1[10],test1[14])-test1[10])*(3/4)+test1[10]
test1 = diff(test1)
data[1,2:7] = data[1,2:7]/2
# Need to add in December 16
new1 = data[2,]
L = length(data[,1])
new1[1,1] = "2021-12-16"
new1[1,2:7] = new1[2:7]/2
data = rbind(data[1,],new1,data[2:L,])
data[3,2:7] = data[2,2:7]
data[11,2:7] = data[11,2:7]/3
L = length(data[,1])
new1[1,1] = "2021-12-25"
new1[1,2:8] = data[11,2:8]
new2 = new1
new2[1,1] = "2021-12-26"
data = rbind(data[1:10,],new1, new2,data[11:L,])
L=length(data$total)
cases = data$total[2:L]
# Remove Christmas dates
test1 = test1[-(10:12)]
dd = tail(data$date,-1)
dd = dd[-(10:12)]
cases = cases[-(10:12)]
# Lag cases by 3 days:
lag = 3
test3 = tail(test1,-lag)
dd3 = head(dd,-lag)
cases3 = head(cases,-lag)
L = length(cases3)
# Break Jan 3
ind = which(dd3 == "2022-01-03")
ind2 = which(dd3 == "2022-01-07") # Excludes Jan 10 which was abnormally high day for tests.
# The above will need to be modified if testing to notification lag is different
cases1 = c(cases3[1:ind], rep(0,(L-ind)))
cases2 = c(rep(0,ind), cases3[(ind+1):L])
popn = rep((317664+91201+76608+36069),L)
popn = popn[-(ind2:L)]
test3 = test3[-(ind2:L)]
cases2 = cases2[-(ind2:L)]
cases1 = cases1[-(ind2:L)]
mod = lm(test3 ~ cases1 + cases2 + popn + 0)
a1 = round(unname(coef(mod)[1]),2)
a2 = round(unname(coef(mod)[2]),2)
b = round(unname(coef(mod)[3]),2)
NL.data = data
L = length(data[,1])
data2 = data.frame(date = rep(data$date,4), cases = c(data$EH, data$CH, data$WH, data$LG), RHA = rep(c("Eastern", "Central", "Western", "Labrador-Grenfell"), each=L))
data3 = data.frame(date = rep(data$date,5), cases = 100000*c(data$EH/317664, data$CH/91201, data$WH/76608, data$LG/36069, data$total/(317664+91201+76608+36069)), RHA = rep(c("Eastern", "Central", "Western", "Labrador-Grenfell", "Newfoundland & Labrador"), each=L))
# Corrected data
ind = min(which(data3$date=="2022-01-06"))
EH.corr = data$EH + (a1-a2)*c(rep(0,(ind-1)),data$EH[(ind-3):(L-3)])
i1=min(which(data3$date == "2021-12-29"))
EH.corr[i1:ind] = EH.corr[i1:ind]+EH.corr[i1:ind]/sum(EH.corr[i1:ind])*680
CH.corr = data$CH + (a1-a2)*c(rep(0,(ind-1)),data$CH[(ind-3):(L-3)])
WH.corr = data$WH + (a1-a2)*c(rep(0,(ind-1)),data$WH[(ind-3):(L-3)])
LG.corr = data$LG + (a1-a2)*c(rep(0,(ind-1)),data$LG[(ind-3):(L-3)])
NL.corr = EH.corr + CH.corr + WH.corr + LG.corr
data2.corr = data.frame(date = data$date, EH = EH.corr, NL = NL.corr, WH= WH.corr, LG = LG.corr, CH = CH.corr)
data3.corr = data.frame(date = rep(data$date,5), cases = 100000*c(EH.corr/317664, CH.corr/91201, WH.corr/76608, LG.corr/36069,(EH.corr+CH.corr+WH.corr+LG.corr)/(317664+91201+76608+36069)), RHA = rep(c("Eastern", "Central", "Western", "Labrador-Grenfell", "Newfoundland & Labrador"), each=L))
T<-7
DT = function(){
mod = nls(val ~ a*exp(r*seq(1,T)),
start = list(a = 100, r = 0.2))
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(round(log(2)/lambda,2), NA, NA)
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT,p))
}
HT = function(){
mod = nls(val ~ a*exp(-r*seq(1,T)),
start = list(a = 300, r = 0.2))
#CI = confint(mod, level=0.95)
#CI.lower = max(CI[2,1],0)
#CI.upper = CI[2,2]
lambda = unname(coef(mod)[2])
DT = c(-round(log(.5)/lambda,2), NA, NA)
p1=summary(mod)$coefficients[,4]
p = unname(p1[2])
return(c(DT,p))
}
val <- tail(EH.corr,T)
DT.eastern = DT()
print(DT.eastern)
val <- tail(CH.corr,T)
DT.central = DT()
val <- tail(WH.corr,T)
DT.western = DT()
val <- tail(LG.corr,T)
DT.labrador = DT()
val <- tail(NL.corr,T)
DT.NL = HT()
g1=ggplot(data3.corr, aes(x=date, y=cases, group = RHA)) +
geom_line(aes(color=RHA))+
geom_point(aes(color=RHA))+
xlab("")+
ylab("")+
ggtitle("Adjusted cases per 100,000 people in each NL Regional Health Authority")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=NL, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$EH+data$WH+data$CH+data$LG))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Newfoundland and Labrador")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g.EH=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=EH, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$EH))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Eastern Health")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "2 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g.CH=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=CH, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$CH))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Central Health")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "2 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g.WH=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=WH, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$WH))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Western Health")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "2 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g.LG=ggplot() +
geom_line(data=data2.corr, aes(x=as.Date(date), y=LG, group=1))+
geom_point(aes(x=as.Date(data$date), y=data$LG))+
xlab("")+
ylab("Reported and adjusted cases")+
ggtitle("Labrador-Grenfell Health")+
#ggtitle(paste("At entry: ", exp.on.entry,"days since exposure"))+
theme_classic()+
scale_x_date(date_breaks = "2 day", date_labels = "%d %b")+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g
g.EH+g.CH
g.WH+g.LG
g1
# Assume 3 days hospitalized. Admissions - discharges
# Hospitalized within 14 days of specimen, take 7 as mean.
d = 3
UKh = (198348/815)
UKm = (198348/57)
ONh = (29594/75)
ONm = (29594/3)
NLh = 1.2*ONh
NLm = .1*ONm
UK.rate = NL.corr/UKh
UK.rate = cumsum(UK.rate)
UK.rate[7:L] = UK.rate[7:L] - UK.rate[1:(L-6)]
ON.rate = NL.corr/ONh
ON.rate = cumsum(ON.rate)
ON.rate[7:L] = ON.rate[7:L] - ON.rate[1:(L-6)]
NL.rate = NL.corr/NLh
NL.rate = cumsum(NL.rate)
NL.rate[7:L] = NL.rate[7:L] - NL.rate[1:(L-6)]
UK.rate.ad = cumsum(NL.corr)/UKh
ON.rate.ad = cumsum(NL.corr)/ONh
NL.rate.ad = cumsum(NL.corr)/NLh
# 649834/57 - 5 days median time to death.
UK.rate.m = cumsum(NL.corr)/UKm
ON.rate.m = cumsum(NL.corr)/ONm
NL.rate.m = cumsum(NL.corr)/NLm
future.dates = tail(seq(from=as.Date(data$date[L], format = "%Y-%m-%d"), length.out = 8, by = "days"),-1)
days2 = c(tail(as.Date(data$date, format = "%Y-%m-%d"),-7),future.dates)
future.dates.5 = tail(seq(from=as.Date(data$date[L], format = "%Y-%m-%d"), length.out = 6, by = "days"),-1)
days3 = c(tail(as.Date(data$date, format = "%Y-%m-%d"),-5),future.dates.5)
NL.hosp = c(tail(NL.data$cum.hospital,-7), rep(NA,7))
NL.mort = c(tail(NL.data$cum.mort,-5), rep(NA,5))
data2 = data.frame(dates = rep(days2,3), occupancy = c(ON.rate,UK.rate,NL.rate), location = rep(c("ON", "UK", "NL"), each = L))
data3 = data.frame(dates = rep(days3,3), mortality = c(ON.rate.m, UK.rate.m,NL.rate.m), location = rep(c("ON", "UK", "NL"), each = length(days3)))
data4 = data.frame(dates = rep(days2,3), admission = c(UK.rate.ad, ON.rate.ad, NL.rate.ad),location = rep(c("ON", "UK", "NL"), each = L))
pointdata = data.frame(days2 = days2, hospital = NL.hosp)
pointdata2 = data.frame(days2 = days3, mortality = NL.mort)
g2=ggplot()+
geom_line(data=data2, aes(x=as.Date(dates), y=occupancy, group = location, color=location))+
geom_point(data = pointdata, aes(x = days2, y = hospital))+
geom_line(data = pointdata, aes(x = days2, y = hospital))+
xlab("")+
ylab("")+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
ggtitle("Projected and actual hospital occupancy")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g2b=ggplot()+
geom_line(data=data4, aes(x=as.Date(dates), y=admission, group = location, color=location))+
xlab("")+
ylab("")+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
ggtitle("Projected cumulative hospitalizations since December 15, 2021")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g3=ggplot()+
geom_line(data=data3, aes(x=as.Date(dates), y=mortality, group = location, color=location))+
geom_point(data = pointdata2, aes(x = days2, y = mortality))+
geom_line(data = pointdata2, aes(x = days2, y = mortality))+
xlab("")+
ylab("")+
scale_x_date(date_breaks = "1 day", date_labels = "%d %b")+
ggtitle("Projected and actual cumulative deaths since December 15, 2021")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90),legend.title = element_blank())
g2
g3
